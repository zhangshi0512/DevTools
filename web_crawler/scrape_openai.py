import asyncio
import os
import sys
import io
from crawl4ai import AsyncWebCrawler
from Crawl4ai import create_filename_from_url
from datetime import datetime

# Set stdout and stderr to utf-8
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

async def main():
    urls = [
        "https://openai.com/index/ai-clinical-copilot-penda-health/",
        "https://openai.com/index/chatgpt-agent-system-card/",
        "https://openai.com/index/introducing-chatgpt-agent/",
        "https://openai.com/index/understanding-preventing-misalignment-generalization/",
        "https://openai.com/index/o3-o4-mini-system-card-operator-addendum/",
        "https://openai.com/index/introducing-codex/",
        "https://openai.com/index/o3-o4-mini-system-card-codex-addendum/",
        "https://openai.com/index/introducing-healthbench/",
        "https://openai.com/index/introducing-o3-and-o4-mini/",
        "https://openai.com/index/thinking-with-images/",
        "https://openai.com/index/o3-o4-mini-system-card/",
        "https://openai.com/index/updated-preparedness-framework/",
        "https://openai.com/index/introducing-gpt-4-1-api/",
        "https://openai.com/index/browsecomp-benchmark-browsing-agents/",
        "https://openai.com/index/paperbench-evaluating-ai-research-replication/",
        "https://openai.com/index/introducing-4o-image-generation/",
        "https://openai.com/index/gpt-4o-system-card-image-generation-addendum/",
        "https://openai.com/index/studying-affective-use-emotional-wellbeing-chatgpt/",
        "https://openai.com/index/introducing-next-generation-audio-models-api/",
        "https://openai.com/index/detecting-misbehavior-frontier-reasoning-models/",
        "https://openai.com/index/gpt-4-5-system-card/",
        "https://openai.com/index/introducing-gpt-4-5/",
        "https://openai.com/index/deep-research-system-card/",
        "https://openai.com/index/introducing-swe-lancer-benchmark/",
        "https://openai.com/index/sharing-latest-model-spec/",
        "https://openai.com/index/introducing-deep-research/",
        "https://openai.com/index/openai-o3-mini/",
        "https://openai.com/index/o3-mini-system-card/",
        "https://openai.com/index/operator-system-card/",
        "https://openai.com/index/computer-using-agent/",
        "https://openai.com/index/trading-inference-time-compute-adversarial-robustness/",
        "https://openai.com/index/deliberative-alignment-reasoning-safer-language-models/",
        "https://openai.com/index/sora-system-card/",
        "https://openai.com/index/openai-o1-system-card/",
        "https://openai.com/index/advancing-red-teaming-people-ai/",
        "https://openai.com/index/introducing-simpleqa/",
        "https://openai.com/index/continuous-time-consistency-models/",
        "https://openai.com/index/evaluating-fairness-chatgpt/",
        "https://openai.com/index/mle-bench-evaluating-machine-learning-agents/",
        "https://openai.com/index/learning-to-reason-with-llms/",
        "https://openai.com/index/openai-o1-mini/",
        "https://openai.com/index/introducing-swe-bench-verified/",
        "https://openai.com/index/gpt-4o-system-card/",
        "https://openai.com/index/improving-model-safety-behavior-rule-based-rewards/",
        "https://openai.com/index/gpt-4o-mini-advancing-cost-efficient-intelligence/",
        "https://openai.com/index/prover-verifier-games-improve-legibility/",
        "https://openai.com/index/openai-los-alamos-research-partnership/",
        "https://openai.com/index/finding-gpt4-mistakes-gpt4/",
        "https://openai.com/index/consistency-models/",
        "https://openai.com/index/improved-techniques-training-consistency-models/",
        "https://openai.com/index/holistic-approach-undesired-content-detection/",
        "https://openai.com/index/extracting-concepts-gpt4/",
        "https://openai.com/index/hello-gpt-4o/",
        "https://openai.com/index/understanding-source-content-online/",
        "https://openai.com/index/instruction-hierarchy-training-llms/",
        "https://openai.com/research/video-generation-models-as-world-simulators",
        "https://openai.com/index/building-early-warning-system-llm-biological-threats/",
        "https://openai.com/index/practices-governing-agentic-ai-systems/",
        "https://openai.com/index/dall-e-3-system-card/",
        "https://openai.com/index/gpt-4v-system-card/",
        "https://openai.com/index/confidence-building-measures-artificial-intelligence/",
        "https://openai.com/index/frontier-ai-regulation-managing-emerging-risks/",
        "https://openai.com/index/improving-mathematical-reasoning-process-supervision/",
        "https://openai.com/index/democratic-inputs-to-ai/",
        "https://openai.com/index/language-models-can-explain-neurons/",
        "https://openai.com/index/gpts-are-gpts-labor-market-impact/",
        "https://openai.com/index/gpt-4/",
        "https://openai.com/index/forecasting-potential-misuses-language-models-disinformation/",
        "https://openai.com/index/point-e/",
        "https://openai.com/index/scaling-laws-reward-model-overoptimization/",
        "https://openai.com/index/whisper/",
        "https://openai.com/index/efficient-training-language-models-fill-middle/",
        "https://openai.com/index/hazard-analysis-framework-code-synthesis-llms/",
        "https://openai.com/index/dall-e-2-pre-training-mitigations/",
        "https://openai.com/index/learning-play-minecraft-video-pretraining/",
        "https://openai.com/index/evolution-through-large-models/",
        "https://openai.com/index/ai-written-critiques-help-humans-notice-flaws/",
        "https://openai.com/index/techniques-training-large-neural-networks/",
        "https://openai.com/index/teaching-models-express-uncertainty-words/",
        "https://openai.com/index/hierarchical-text-conditional-image-generation-clip-latents/",
        "https://openai.com/index/measuring-goodharts-law/",
        "https://openai.com/index/research-agenda-economic-impacts-code-generation-models/",
        "https://openai.com/index/lessons-learned-language-model-safety-misuse/",
        "https://openai.com/index/solving-formal-math-olympiad-problems/",
        "https://openai.com/index/aligning-language-models-follow-instructions/",
        "https://openai.com/index/text-code-embeddings-contrastive-pre-training/",
        "https://openai.com/index/webgpt/",
        "https://openai.com/index/solving-math-word-problems/",
        "https://openai.com/index/summarizing-books-human-feedback/",
        "https://openai.com/index/truthfulqa/",
        "https://openai.com/index/triton/",
        "https://openai.com/index/evaluating-large-language-models-trained-code/",
        "https://openai.com/index/improving-language-model-behavior-curated-dataset/",
        "https://openai.com/index/multimodal-neurons/",
        "https://openai.com/index/understanding-capabilities-limitations-societal-impact-llms/",
        "https://openai.com/index/scaling-kubernetes-7500-nodes/",
        "https://openai.com/index/clip/",
        "https://openai.com/index/dall-e/",
        "https://openai.com/index/generative-language-modeling-automated-theorem-proving/",
        "https://openai.com/index/learning-summarize-human-feedback/",
        "https://openai.com/index/image-gpt/",
        "https://openai.com/research/language-models-are-few-shot-learners",
        "https://openai.com/index/ai-and-efficiency/",
        "https://openai.com/index/jukebox/",
        "https://openai.com/index/improving-verifiability-ai-development/",
        "https://openai.com/index/openai-microscope/",
        "https://openai.com/index/scaling-laws-neural-language-models/",
        "https://openai.com/index/dota-2-large-scale-deep-reinforcement-learning/",
        "https://openai.com/index/deep-double-descent/",
        "https://openai.com/index/procgen-benchmark/",
        "https://openai.com/index/safety-gym/",
        "https://openai.com/index/benchmarking-safe-exploration-deep-reinforcement-learning/",
        "https://openai.com/index/gpt-2-1-5b-release/",
        "https://openai.com/index/solving-rubiks-cube/",
        "https://openai.com/index/fine-tuning-gpt-2-human-preferences/",
        "https://openai.com/index/emergent-tool-use-multi-agent-interaction/",
        "https://openai.com/index/testing-robustness-unforeseen-adversaries/",
        "https://openai.com/index/gpt-2-6-month-follow-up/",
        "https://openai.com/index/responsible-ai-development-cooperation-safety/",
        "https://openai.com/index/transfer-adversarial-robustness-perturbation-types/",
        "https://openai.com/index/musenet/",
        "https://openai.com/index/generative-modeling-sparse-transformers/",
        "https://openai.com/index/openai-five-defeats-dota-2-world-champions/",
        "https://openai.com/index/implicit-generation-generalization-energy-based-models/",
        "https://openai.com/index/activation-atlases/",
        "https://openai.com/index/neural-mmo/",
        "https://openai.com/index/ai-safety-needs-social-scientists/",
        "https://openai.com/index/better-language-models/",
        "https://openai.com/index/computational-limitations-robust-classification/",
        "https://openai.com/index/ai-training-scales/",
        "https://openai.com/index/quantifying-generalization-reinforcement-learning/",
        "https://openai.com/index/spinning-up-in-deep-rl/",
        "https://openai.com/index/learning-concepts-energy-functions/",
        "https://openai.com/index/plan-online-learn-offline/",
        "https://openai.com/index/reinforcement-learning-prediction-based-rewards/",
        "https://openai.com/index/learning-complex-goals-iterated-amplification/",
        "https://openai.com/index/ffjord/",
        "https://openai.com/index/international-2018-results/",
        "https://openai.com/index/large-scale-study-curiosity-driven-learning/",
        "https://openai.com/index/openai-five-benchmark-results/",
        "https://openai.com/index/learning-dexterity/",
        "https://openai.com/index/variational-option-discovery-algorithms/",
        "https://openai.com/index/glow/",
        "https://openai.com/index/learning-montezumas-revenge-single-demonstration/",
        "https://openai.com/index/openai-five/",
        "https://openai.com/index/retro-contest-results/",
        "https://openai.com/index/learning-policy-representations-multiagent-systems/",
        "https://openai.com/index/improving-language-understanding-unsupervised-learning/",
        "https://openai.com/index/gamepad-learning-environment-theorem-proving/",
        "https://openai.com/index/gym-retro/",
        "https://openai.com/index/ai-and-compute/",
        "https://openai.com/index/ai-safety-via-debate/",
        "https://openai.com/index/evolved-policy-gradients/",
        "https://openai.com/index/gotta-learn-fast/",
        "https://openai.com/index/retro-contest/",
        "https://openai.com/index/variance-reduction-policy-gradient/",
        "https://openai.com/index/improving-gans-optimal-transport/",
        "https://openai.com/index/first-order-meta-learning-algorithms/",
        "https://openai.com/index/reptile/",
        "https://openai.com/index/learning-explore-meta-reinforcement-learning/",
        "https://openai.com/index/multi-goal-reinforcement-learning/",
        "https://openai.com/index/ingredients-robotics-research/",
        "https://openai.com/index/preparing-malicious-uses-ai/",
        "https://openai.com/index/interpretable-machine-learning-teaching/",
        "https://openai.com/index/discovering-types-entity-disambiguation/",
        "https://openai.com/index/requests-research-2/",
        "https://openai.com/index/scaling-kubernetes-2500-nodes/",
        "https://openai.com/index/block-sparse-gpu-kernels/",
        "https://openai.com/index/learning-sparse-neural-networks-l0-regularization/",
        "https://openai.com/index/interpretable-pedagogical-examples/",
        "https://openai.com/index/learning-hierarchy/",
        "https://openai.com/index/generalizing-from-simulation/",
        "https://openai.com/index/sim-to-real-transfer-robotic-control/",
        "https://openai.com/index/asymmetric-actor-critic-image-based-robot-learning/",
        "https://openai.com/index/domain-randomization-generative-models-robotic-grasping/",
        "https://openai.com/index/competitive-self-play/",
        "https://openai.com/index/meta-learning-wrestling/",
        "https://openai.com/index/nonlinear-computation-deep-linear-networks/",
        "https://openai.com/index/learning-model-other-minds/",
        "https://openai.com/index/learning-opponent-learning-awareness/",
        "https://openai.com/index/openai-baselines-acktr-a2c/",
        "https://openai.com/index/more-on-dota-2/",
        "https://openai.com/index/dota-2/",
        "https://openai.com/index/gathering-human-feedback/",
        "https://openai.com/index/better-exploration-parameter-noise/",
        "https://openai.com/index/proximal-policy-optimization/",
        "https://openai.com/index/robust-adversarial-inputs/",
        "https://openai.com/index/hindsight-experience-replay/",
        "https://openai.com/index/teacher-student-curriculum-learning/",
        "https://openai.com/index/faster-physics-python/",
        "https://openai.com/index/learning-from-human-preferences/",
        "https://openai.com/index/learning-cooperate-compete-communicate/",
        "https://openai.com/index/ucb-exploration-q-ensembles/",
        "https://openai.com/index/openai-baselines-dqn/",
        "https://openai.com/index/robots-that-learn/",
        "https://openai.com/index/roboschool/",
        "https://openai.com/index/equivalence-policy-gradients-soft-q-learning/",
        "https://openai.com/index/stochastic-neural-networks-hierarchical-reinforcement-learning/",
        "https://openai.com/index/unsupervised-sentiment-neuron/",
        "https://openai.com/index/spam-detection-physical-world/",
        "https://openai.com/index/evolution-strategies/",
        "https://openai.com/index/one-shot-imitation-learning/",
        "https://openai.com/index/learning-to-communicate/",
        "https://openai.com/index/emergence-grounded-compositional-language/",
        "https://openai.com/index/prediction-control-temporal-segment-models/",
        "https://openai.com/index/third-person-imitation-learning/",
        "https://openai.com/index/attacking-machine-learning-adversarial-examples/",
        "https://openai.com/index/adversarial-attacks-neural-network-policies/",
        "https://openai.com/index/pixelcnn-plus-plus/",
        "https://openai.com/index/faulty-reward-functions/",
        "https://openai.com/index/universe/",
        "https://openai.com/index/exploration-count-based-deep-reinforcement-learning/",
        "https://openai.com/index/quantitative-analysis-decoder-based-generative-models/",
        "https://openai.com/index/connection-gans-inverse-reinforcement-learning-energy-based-models/",
        "https://openai.com/index/rl-squared/",
        "https://openai.com/index/variational-lossy-autoencoder/",
        "https://openai.com/index/extensions-limitations-neural-gpu/",
        "https://openai.com/index/semi-supervised-knowledge-transfer-private-training-data/",
        "https://openai.com/index/transfer-simulation-real-world-deep-inverse-dynamics/",
        "https://openai.com/index/infrastructure-deep-learning/",
        "https://openai.com/index/concrete-ai-safety-problems/",
        "https://openai.com/index/generative-models/",
        "https://openai.com/index/adversarial-training-semi-supervised-text-classification/",
        "https://openai.com/index/openai-gym-beta/",
        "https://openai.com/index/weight-normalization/",
    ]

    output_dir = "openai"
    os.makedirs(output_dir, exist_ok=True)

    async with AsyncWebCrawler() as crawler:
        for url in urls:
            try:
                result = await crawler.arun(url=url)
                filename = create_filename_from_url(url)
                filepath = os.path.join(output_dir, filename)
                with open(filepath, 'w', encoding='utf-8') as f:
                    f.write(f"# {url}\n\n")
                    f.write(f"*Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}*\n\n")
                    f.write(result.markdown)
                print(f"Content saved to: {filepath}")
            except Exception as e:
                print(f"Failed to process {url}: {e}")

if __name__ == "__main__":
    asyncio.run(main())